{"ast":null,"code":"var _jsxFileName = \"D:\\\\agentic\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userId] = useState('user123'); // Replace with dynamic user ID if needed\n  const [ticketId, setTicketId] = useState('');\n  useEffect(() => {\n    // Fetch initial chat history if needed\n  }, []);\n  const handleSend = async () => {\n    if (!message.trim()) return;\n\n    // Add user message to chat history\n    setChatHistory(prev => [...prev, {\n      user: message,\n      bot: ''\n    }]);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message,\n        user_id: userId\n      });\n      // Add bot response to chat history\n      setChatHistory(prev => {\n        const updatedHistory = [...prev];\n        updatedHistory[updatedHistory.length - 1].bot = response.data.message;\n        return updatedHistory;\n      });\n    } catch (error) {\n      console.error('Error fetching response:', error);\n      setChatHistory(prev => [...prev, {\n        user: '',\n        bot: 'Error fetching response'\n      }]);\n    }\n    setMessage('');\n  };\n  const handleReset = async () => {\n    await axios.post('http://localhost:5000/reset');\n    setChatHistory([]);\n  };\n  const handleCheckStatus = async () => {\n    if (!ticketId) return;\n    setChatHistory(prev => [...prev, {\n      user: `check_status ${ticketId}`,\n      bot: ''\n    }]);\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: `check_status ${ticketId}`,\n        user_id: userId\n      });\n      setChatHistory(prev => {\n        const updatedHistory = [...prev];\n        updatedHistory[updatedHistory.length - 1].bot = response.data.message;\n        return updatedHistory;\n      });\n    } catch (error) {\n      console.error('Error fetching status:', error);\n      setChatHistory(prev => [...prev, {\n        user: '',\n        bot: 'Error fetching status'\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"chat-header\",\n      children: \"Agentic Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [chat.user && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message user\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"You:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: chat.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), chat.bot && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Bot:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: chat.bot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"send\",\n      onClick: handleSend,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: ticketId,\n      onChange: e => setTicketId(e.target.value),\n      placeholder: \"Enter Ticket ID to check status...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"check-status\",\n      onClick: handleCheckStatus,\n      children: \"Check Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: handleReset,\n      children: \"Reset Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Hxv6vWUijXxBsGlYqHRbldACFJE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","message","setMessage","chatHistory","setChatHistory","userId","ticketId","setTicketId","handleSend","trim","prev","user","bot","response","post","user_id","updatedHistory","length","data","error","console","handleReset","handleCheckStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","chat","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/agentic/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [message, setMessage] = useState('');\n  const [chatHistory, setChatHistory] = useState([]);\n  const [userId] = useState('user123'); // Replace with dynamic user ID if needed\n  const [ticketId, setTicketId] = useState('');\n\n  useEffect(() => {\n    // Fetch initial chat history if needed\n  }, []);\n\n  const handleSend = async () => {\n    if (!message.trim()) return;\n\n    // Add user message to chat history\n    setChatHistory((prev) => [...prev, { user: message, bot: '' }]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message,\n        user_id: userId,\n      });\n      // Add bot response to chat history\n      setChatHistory((prev) => {\n        const updatedHistory = [...prev];\n        updatedHistory[updatedHistory.length - 1].bot = response.data.message;\n        return updatedHistory;\n      });\n    } catch (error) {\n      console.error('Error fetching response:', error);\n      setChatHistory((prev) => [...prev, { user: '', bot: 'Error fetching response' }]);\n    }\n\n    setMessage('');\n  };\n\n  const handleReset = async () => {\n    await axios.post('http://localhost:5000/reset');\n    setChatHistory([]);\n  };\n\n  const handleCheckStatus = async () => {\n    if (!ticketId) return;\n    setChatHistory((prev) => [...prev, { user: `check_status ${ticketId}`, bot: '' }]);\n\n    try {\n      const response = await axios.post('http://localhost:5000/chat', {\n        message: `check_status ${ticketId}`,\n        user_id: userId,\n      });\n      setChatHistory((prev) => {\n        const updatedHistory = [...prev];\n        updatedHistory[updatedHistory.length - 1].bot = response.data.message;\n        return updatedHistory;\n      });\n    } catch (error) {\n      console.error('Error fetching status:', error);\n      setChatHistory((prev) => [...prev, { user: '', bot: 'Error fetching status' }]);\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h1 className=\"chat-header\">Agentic Chat</h1>\n      <div className=\"chat-box\">\n        {chatHistory.map((chat, index) => (\n          <div key={index}>\n            {chat.user && (\n              <div className=\"message user\">\n                <span>You:</span>\n                <div>{chat.user}</div>\n              </div>\n            )}\n            {chat.bot && (\n              <div className=\"message bot\">\n                <span>Bot:</span>\n                <div>{chat.bot}</div>\n              </div>\n            )}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={message}\n        onChange={(e) => setMessage(e.target.value)}\n        placeholder=\"Type your message...\"\n      />\n      <button className=\"send\" onClick={handleSend}>\n        Send\n      </button>\n      <input\n        type=\"text\"\n        value={ticketId}\n        onChange={(e) => setTicketId(e.target.value)}\n        placeholder=\"Enter Ticket ID to check status...\"\n      />\n      <button className=\"check-status\" onClick={handleCheckStatus}>\n        Check Status\n      </button>\n      <button className=\"reset\" onClick={handleReset}>\n        Reset Chat\n      </button>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}